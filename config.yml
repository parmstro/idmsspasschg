# playbook to configure httpd proxy on container
# Paul Armstrong
# Red Hat
# parmstro@redhat.com
# 2017-06-28
#
- hosts: localhost
  vars:
    httpd_port: 80
    proxy_httpd_ssl_port: 443
    # enter the FQDN of your IPA/IdM Server
    proxy_target_fqdn: idm.parmstrong.ca
    # enter the FQDN of the URL you are proxying from
    proxy_referer_fqdn: someserver.parmstrong.ca
    # set up the match to the referer
    proxy_referer_fqdn_match: someserver\.parmstrong\.ca    
    ssl_cert_key_file: /etc/pki/tls/private/localhost.key
    ssl_cert_file: /etc/pki/tls/certs/localhost.crt

  remote_user: root

# TODO: put in task to copy ssl certs to the proper locations and name them
# we will parameterize SSLCertificateKeyFile and SSLCertificateFile
# for now we are using the defaults for self signed certs
#
  tasks:
  - name: Configure httpd server
    blockinfile:
      path: /etc/httpd/conf.d/ssl.conf
      marker: "# {mark} ANSIBLE MANAGED BLOCK"
      content: |
        #
        Listen 443 https
        SSLPassPhraseDialog exec:/usr/libexec/httpd-ssl-pass-dialog
        SSLSessionCache         shmcb:/run/httpd/sslcache(512000)
        SSLSessionCacheTimeout  300
        SSLRandomSeed startup file:/dev/urandom  256
        SSLRandomSeed connect builtin
        SSLCryptoDevice builtin
        <VirtualHost _default_:443>
          ErrorLog logs/ssl_error_log
          TransferLog logs/ssl_access_log
          LogLevel warn
          SSLEngine on
          SSLProtocol all -SSLv2
          SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA
          SSLCertificateFile {{ ssl_cert_file }}
          SSLCertificateKeyFile {{ ssl_cert_key_file }}
          <Files ~ "\.(cgi|shtml|phtml|php3?)$">
              SSLOptions +StdEnvVars
          </Files>
          <Directory "/var/www/cgi-bin">
              SSLOptions +StdEnvVars
          </Directory>
          BrowserMatch "MSIE [2-5]" nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0
          CustomLog logs/ssl_request_log "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x %{Referer}i %U %{Cookie}i %{Set-Cookie}o \"%r\" %b"
          # add the following directives
          SSLProxyEngine On
          RequestHeader edit Referer ^https://{{ proxy_referer_fqdn_match }}/ https://{{ proxy_target_fqdn }}/
          ProxyPass / https://{{ proxy_target_fqdn }}/
          ProxyPassReverse / https://{{ proxy_target_fqdn }}/
          ProxyPassReverseCookieDomain {{ proxy_target_fqdn }} {{ proxy_referer_fqdn }}
        </VirtualHost>
